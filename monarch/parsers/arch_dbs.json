{
    "description": "This database contains architecture parameters for the pipelined MonArch architecture.",
    "sys_params": {
        "datapath_width": 24,
        "datapath_radix": 16,
        "datapath_mantissa": 17,
        "datapath_exponent": 6
    },
    "manycore_params": {
        "cores": 1,
        "columns": 1,
        "mem_banks": 1,
        "mem_bank_size": 256,
        "working_regs": 24,
        "output_regs": 8,
        "pre_alu_dly": 0,
        "post_alu_dly": 1,
        "machcode_params": {
            "op_width": 5,
            "reg_ptr_width": 5,
            "instr_width": 20
        }
    },
    "opcodes": {
        "mult": {
            "block_name": "MULTIPLY",
            "op_index": 1,
            "delay": 5,
            "input_num": 2,
            "precedence": false,
            "op": "lambda a, b: a * b",
            "sympy_op": "Mul"
        },
        "add": {
            "block_name": "ADD",
            "delay": 4,
            "op_index": 2,
            "input_num": 2,
            "precedence": false,
            "op": "lambda a, b: a + b",
            "sympy_op": "Add"
        },
        "sub": {
            "block_name": "SUBTRACT",
            "delay": 4,
            "op_index": 3,
            "input_num": 2,
            "precedence": true,
            "op": "lambda a, b: a - b",
            "sympy_op": "None"
        },
        "div": {
            "block_name": "DIVIDE",
            "delay": 20,
            "op_index": 4,
            "input_num": 2,
            "precedence": true,
            "op": "lambda a, b: a / b",
            "sympy_op": "None"
        },
        "square": {
            "block_name": "SQUARER",
            "delay": 5,
            "op_index": 5,
            "input_num": 1,
            "precedence": false,
            "op": "lambda a: a ** 2",
            "sympy_op": "None"
        },
        "lut": {
            "block_name": "LOOK_UP_TABLE",
            "delay": 1,
            "op_index": 6,
            "input_num": 1,
            "precedence": false,
            "op": "None",
            "sympy_op": "None"
        }
    },
    "isa": {
        "mult": {
            "opcode": 0,
            "type": "3r"
        },
        "square": {
            "opcode": 0,
            "type": "3r"
        },
        "add": {
            "opcode": 1,
            "type": "3r"
        },
        "sub": {
            "opcode": 2,
            "type": "3r"
        },
        "div": {
            "opcode": 3,
            "type": "3r"
        },
        "nop": {
            "opcode": 31,
            "subopcode": 0,
            "type": "0r"
        },
        "lut": {
            "opcode": 4,
            "type": "2rl"
        },

        "mult_cl": {
            "opcode": 8,
            "type": "2rc"
        },
        "add_cl": {
            "opcode": 9,
            "type": "2rc"
        },
        "sub_cl": {
            "opcode": 10,
            "type": "2rc"
        },
        "div_cl": {
            "opcode": 11,
            "type": "2rc"
        },

        "mult_cm": {
            "opcode": 16,
            "type": "2cr"
        },
        "add_cm": {
            "opcode": 17,
            "type": "2cr"
        },
        "sub_cm": {
            "opcode": 18,
            "type": "2cr"
        },
        "div_cm": {
            "opcode": 19,
            "type": "2cr"
        },
        "halt": {
            "opcode": 31,
            "subopcode": 1,
            "type": "0r"
        }
    },
    "lut_functions": {
        "e": {
            "subopcode": 0,
            "table_size": 1024,
            "fn": "lambda x: 2.71828182845 ** x",
            "entries_fn": "lambda x: 1024 ** x + 16"
        }
    }
}